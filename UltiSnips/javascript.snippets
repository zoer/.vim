snippet rc "React Component"
import React, { Component } from 'react'

class ${1} extends Component {
	render () {
		return (
			<div>
				${4}
			</div>
		)
	}
}

export default `!p snip.rv = t[1]`
endsnippet

snippet imp "Import ES6"
import ${1} from '${2}'
endsnippet

snippet rco "React Container"
import React from 'react'
import { connect } from 'react-redux'

@connect(state => ({
	authenticated: state.auth.authenticated
}))
class ${1:foo} extends React.Component {
	render () {
		return (
			<div>
				${2}
			</div>
		)
	}
}

export default `!p snip.rv = t[1]`
endsnippet

snippet sct "static contextTypes"
static contextTypes = {
	router: PropTypes.object.isRequired${0}
}
endsnippet

snippet ipt "import PropTypes"
import PropTypes from 'prop-types'
endsnippet

snippet clse "class Foo extends Bar"
class ${1} extends ${2:Component} {
	${0}
}
endsnippet

snippet rnd "render ()"
render () {
	return (
		<div>
			${0}
		</div>
	)
}
endsnippet

snippet constructor
constructor (props, context) {
	super(props, context);
	${0}
}

endsnippet

snippet Query "Apollo Query"
<Query query={${1:query}} variables={${2:variables}}>
	{({ loading, error, data }) => {
		if (loading || error) return <Loading error={error} />;

		const { ${3} } = data;

		return <div>
			${0}
		</div>
	}}
</Query>
endsnippet

snippet pp "PropTypes."
PropTypes.${1}${2:.isRequired}${0}
endsnippet

snippet staticc "static context = { ... }"
static contextTypes = {
	${1:router: PropTypes.object.isRequired,}${0}
}

endsnippet

snippet staticpt "static propTypes = { ... }"
static propTypes = {
	${0}
}

endsnippet

snippet ldnl "eslint-disable-next-line ..."
// eslint-disable-next-line ${0}
endsnippet
